{"version":3,"sources":["webpack:///src/view/moduleVue/VueStyleGuide.vue","webpack:///./src/view/moduleVue/VueStyleGuide.vue?2c5a","webpack:///./src/view/moduleVue/VueStyleGuide.vue"],"names":["moduleVue_VueStyleGuide","render","_vm","this","_h","$createElement","_c","_self","_v","_s","componentName","eigenValue","staticRenderFns","Component","__webpack_require__","normalizeComponent","name","data","ssrContext","__webpack_exports__"],"mappings":"2HA4BA,ICzBeA,GADEC,OAFjB,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAJ,EAAAM,GAAA,8EAAAF,EAAA,MAAAJ,EAAAM,GAAA,oFAAAF,EAAA,MAAAJ,EAAAM,GAAA,kHAAmUF,EAAA,MAAAJ,EAAAM,GAAA,sGAAAF,EAAA,MAAAJ,EAAAM,GAAA,wIAAAF,EAAA,MAAAJ,EAAAM,GAAA,sEAAAF,EAAA,MAAAJ,EAAAM,GAAA,+EAAAF,EAAA,MAAAJ,EAAAM,GAAA,4JAAAF,EAAA,MAAAJ,EAAAM,GAAA,0EAAAN,EAAAO,GAAAP,EAAAQ,eAAA,UAAAJ,EAAA,MAAAJ,EAAAM,GAAA,qGAAk0BF,EAAA,MAAAJ,EAAAM,GAAA,sDAAyFN,EAAAO,GAAAP,EAAAS,YAAA,UAAAL,EAAA,MAAAJ,EAAAM,GAAA,wEAA+GF,EAAA,MAAAJ,EAAAM,GAAA,4EAAAF,EAAA,MAAAJ,EAAAM,GAAA,4DAAAF,EAAA,MAAAJ,EAAAM,GAAA,iEAAAF,EAAA,MAAAJ,EAAAM,GAAA,2DAAAF,EAAA,MAAAJ,EAAAM,GAAA,oHAEr5CI,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,EFYAC,KAAA,gBACAC,KAFA,WAGA,OACAP,cAAA,gCACAC,WAAA,gDEdEX,GATF,EAVA,SAAAkB,GACEJ,EAAQ,SAaV,kBAEA,MAUeK,EAAA,QAAAN,EAAiB","file":"static/js/11.b66a7de9378eaf17e676.js","sourcesContent":["<template>\r\n  <div>\r\n    1.组件名应该始终是多个单词的，根组件 App 以及 transition、component 之类的 Vue 内置组件除外\r\n    <br />2.组件的 data 必须是一个函数。当在组件中使用 data 属性的时候 (除了 new Vue 外的任何地方)，它的值必须是返回一个对象的函数。\r\n    <br />\r\n    3.Prop 定义应该尽量详细。在你提交的代码中，prop 的定义应该尽量详细，props:{object:{type:String,required:true,default:'value'}}\r\n    <br />4.在组件上总是必须用 key 配合 v-for，以便维护内部组件及其子树的状态,key用于重新渲染v-for的序列元素,且永远不要把 v-if 和 v-for 同时用在同一个元素上。\r\n    <br />5.使用模块作用域保持不允许外部访问的函数的私有性。如果无法做到这一点，就始终为插件、混入等不考虑作为对外公共 API 的自定义私有属性使用 $_ 前缀。\r\n    并附带一个命名空间以回避和其它作者的冲突 (比如 $_yourPluginName_)\r\n    <br />6.单文件组件的文件名应该要么始终是单词大写开头 (PascalCase)，要么始终是横线连接 (kebab-case)\r\n    <br />7.应用特定样式和约定的基础组件 (也就是展示类的、无逻辑的或无状态的组件) 应该全部以一个特定的前缀开头，比如 Base、App 或 V\r\n    <br />8.只应该拥有单个活跃实例的组件应该以 The 前缀命名，以示其唯一性。每个页面只使用一次。组件永远不接受任何 prop，因为它们是为你的应用定制的，\r\n    而不是它们在你的应用中的上下文。如果你发现有必要添加 prop，那就表明这实际上是一个可复用的组件，只是目前在每个页面里只使用一次\r\n    <br />\r\n    9.在单文件组件、字符串模板和 JSX 中没有内容的组件应该是自闭合的——但在 DOM 模板里永远不要这样做。 在 DOM 模板中{{componentName}}\r\n    <br />10.组件名应该始终如'PascalCase'，单词首字母大写; 完整单词的组件名组件名应该倾向于完整单词而不是缩写;在声明 prop 的时候,其命名应该始终使用 camelCase\r\n    <br />\r\n    11.多个特性的元素应该分多行撰写，每个特性一行;非空 HTML 特性值应该始终带引号,如{{eigenValue}}\r\n    <br />12.组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法;应该把复杂计算属性分割为尽可能多的更简单的属性\r\n    <br />13.指令缩写 (用 : 表示 v-bind: 、用 @ 表示 v-on: 和用 # 表示 v-slot:) 应该要么都用要么都不用\r\n    <br />14.如果一组 v-if + v-else 的元素类型相同，最好使用 key (比如两个div元素)\r\n    <br />15.应该优先通过 prop 和事件进行父子组件之间的通信，而不是 this.$parent 或改变 prop\r\n    <br />16.应该优先通过 Vuex 管理全局状态，而不是通过 this.$root 或一个全局事件总线。\r\n\t\t<br/>17.不要在选项属性或回调上使用箭头函数，比如 created: () => console.log(this.a) 或 vm.$watch('a', newValue => this.myMethod())。\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"VueStyleGuide\",\r\n  data() {\r\n    return {\r\n      componentName: \"<my-component></my-component>\",\r\n      eigenValue: \":style=\\\"{ width: sidebarWidth + 'px' }\\\">\"\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/view/moduleVue/VueStyleGuide.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"\\n    1.组件名应该始终是多个单词的，根组件 App 以及 transition、component 之类的 Vue 内置组件除外\\n    \"),_c('br'),_vm._v(\"2.组件的 data 必须是一个函数。当在组件中使用 data 属性的时候 (除了 new Vue 外的任何地方)，它的值必须是返回一个对象的函数。\\n    \"),_c('br'),_vm._v(\"\\n    3.Prop 定义应该尽量详细。在你提交的代码中，prop 的定义应该尽量详细，props:{object:{type:String,required:true,default:'value'}}\\n    \"),_c('br'),_vm._v(\"4.在组件上总是必须用 key 配合 v-for，以便维护内部组件及其子树的状态,key用于重新渲染v-for的序列元素,且永远不要把 v-if 和 v-for 同时用在同一个元素上。\\n    \"),_c('br'),_vm._v(\"5.使用模块作用域保持不允许外部访问的函数的私有性。如果无法做到这一点，就始终为插件、混入等不考虑作为对外公共 API 的自定义私有属性使用 $_ 前缀。\\n    并附带一个命名空间以回避和其它作者的冲突 (比如 $_yourPluginName_)\\n    \"),_c('br'),_vm._v(\"6.单文件组件的文件名应该要么始终是单词大写开头 (PascalCase)，要么始终是横线连接 (kebab-case)\\n    \"),_c('br'),_vm._v(\"7.应用特定样式和约定的基础组件 (也就是展示类的、无逻辑的或无状态的组件) 应该全部以一个特定的前缀开头，比如 Base、App 或 V\\n    \"),_c('br'),_vm._v(\"8.只应该拥有单个活跃实例的组件应该以 The 前缀命名，以示其唯一性。每个页面只使用一次。组件永远不接受任何 prop，因为它们是为你的应用定制的，\\n    而不是它们在你的应用中的上下文。如果你发现有必要添加 prop，那就表明这实际上是一个可复用的组件，只是目前在每个页面里只使用一次\\n    \"),_c('br'),_vm._v(\"\\n    9.在单文件组件、字符串模板和 JSX 中没有内容的组件应该是自闭合的——但在 DOM 模板里永远不要这样做。 在 DOM 模板中\"+_vm._s(_vm.componentName)+\"\\n    \"),_c('br'),_vm._v(\"10.组件名应该始终如'PascalCase'，单词首字母大写; 完整单词的组件名组件名应该倾向于完整单词而不是缩写;在声明 prop 的时候,其命名应该始终使用 camelCase\\n    \"),_c('br'),_vm._v(\"\\n    11.多个特性的元素应该分多行撰写，每个特性一行;非空 HTML 特性值应该始终带引号,如\"+_vm._s(_vm.eigenValue)+\"\\n    \"),_c('br'),_vm._v(\"12.组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法;应该把复杂计算属性分割为尽可能多的更简单的属性\\n    \"),_c('br'),_vm._v(\"13.指令缩写 (用 : 表示 v-bind: 、用 @ 表示 v-on: 和用 # 表示 v-slot:) 应该要么都用要么都不用\\n    \"),_c('br'),_vm._v(\"14.如果一组 v-if + v-else 的元素类型相同，最好使用 key (比如两个div元素)\\n    \"),_c('br'),_vm._v(\"15.应该优先通过 prop 和事件进行父子组件之间的通信，而不是 this.$parent 或改变 prop\\n    \"),_c('br'),_vm._v(\"16.应该优先通过 Vuex 管理全局状态，而不是通过 this.$root 或一个全局事件总线。\\n\\t\\t\"),_c('br'),_vm._v(\"17.不要在选项属性或回调上使用箭头函数，比如 created: () => console.log(this.a) 或 vm.$watch('a', newValue => this.myMethod())。\\n  \")])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-421fb10c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/view/moduleVue/VueStyleGuide.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-421fb10c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./VueStyleGuide.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./VueStyleGuide.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./VueStyleGuide.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-421fb10c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./VueStyleGuide.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-421fb10c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/moduleVue/VueStyleGuide.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}