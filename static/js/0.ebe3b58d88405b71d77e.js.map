{"version":3,"sources":["webpack:///./src/utils/tools.js"],"names":["Array","prototype","UpCase","i","this","length","toUpperCase","Date","getRealMonth","console","log","getMonth","tools","closureData","setClosureData","val","judgeType","el","Object","toString","call","date","checkNumber","n","String","replace","Number","toFixed","switchArr","arr"],"mappings":"oDACAA,MAAMC,UAAUC,OAAS,WACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,KAAKC,OAAQF,IAC7BC,KAAKD,GAAKC,KAAKD,GAAGG,eAG1BC,KAAKN,UAAUO,aAAe,WAE1B,OADAC,QAAQC,IAAIN,MACLA,KAAKO,WAAa,GAE7B,IAAMC,GAEFC,YAAa,eACbC,eAAgB,SAAUC,GACtBX,KAAKS,YAAcE,GAGvBC,UAAW,SAAUC,GACjB,MAA2C,kBAAvCC,OAAOjB,UAAUkB,SAASC,KAAKH,GACxB,OACuC,uBAAvCC,OAAOjB,UAAUkB,SAASC,KAAKH,GAC/B,YACuC,oBAAvCC,OAAOjB,UAAUkB,SAASC,KAAKH,GAC/B,SACuC,oBAAvCC,OAAOjB,UAAUkB,SAASC,KAAKH,GAC/B,SACuC,qBAAvCC,OAAOjB,UAAUkB,SAASC,KAAKH,GAC/B,UACuC,sBAAvCC,OAAOjB,UAAUkB,SAASC,KAAKH,GAC/B,WACuC,kBAAvCC,OAAOjB,UAAUkB,SAASC,KAAKH,GAC/B,OACuC,mBAAvCC,OAAOjB,UAAUkB,SAASC,KAAKH,GAC/B,QACuC,oBAAvCC,OAAOjB,UAAUkB,SAASC,KAAKH,GAC/B,SAEA,WAuBfI,KAlDU,WAmDN,OAAO,IAAId,MAKfe,YAAa,SAAUP,EAAKQ,GAIxB,OAFAR,GADAA,EAAMS,OAAOT,IACHU,QAAQ,UAAW,IAC7BV,EAAMW,OAAOX,GAAKY,QAAQJ,IAI9BK,UAAW,SAAUC,GACW,UAAxBzB,KAAKY,UAAUa,IACfA,EAAI3B,WAIDU","file":"static/js/0.ebe3b58d88405b71d77e.js","sourcesContent":["//Array.prototype 单页面使用 不能通过main.js 全局定义\r\nArray.prototype.UpCase = function () {\r\n    for (let i = 0; i < this.length; i++) {\r\n        this[i] = this[i].toUpperCase()\r\n    }\r\n}\r\nDate.prototype.getRealMonth = function () {\r\n    console.log(this)\r\n    return this.getMonth() + 1\r\n}\r\nconst tools = {\r\n    // 闭包数据\r\n    closureData: 'initialValue',\r\n    setClosureData: function (val) {\r\n        this.closureData = val\r\n    },\r\n    //检测数据类型\r\n    judgeType: function (el) {\r\n        if (Object.prototype.toString.call(el) === '[object Null]') {\r\n            return \"Null\"\r\n        } else if (Object.prototype.toString.call(el) === '[object Undefined]') {\r\n            return \"Undefined\"\r\n        } else if (Object.prototype.toString.call(el) === '[object String]') {\r\n            return \"String\"\r\n        } else if (Object.prototype.toString.call(el) === '[object Number]') {\r\n            return \"Number\"\r\n        } else if (Object.prototype.toString.call(el) === '[object Boolean]') {\r\n            return \"Boolean\"\r\n        } else if (Object.prototype.toString.call(el) === '[object Function]') {\r\n            return \"Function\"\r\n        } else if (Object.prototype.toString.call(el) === '[object Date]') {\r\n            return \"Date\"\r\n        } else if (Object.prototype.toString.call(el) === '[object Array]') {\r\n            return \"Array\"\r\n        } else if (Object.prototype.toString.call(el) === '[object RegExp]') {\r\n            return \"RegExp\"\r\n        } else {\r\n            return \"unknown\"\r\n        }\r\n\r\n        //\r\n        //     //Object.prototype.toString().call()可以获取到对象的不同类型\r\n        //     /\r\n        //     // Object.prototype.toString.call(undefined); // \"[object Undefined]\"\r\n        //     // Object.prototype.toString.call(“abc”);// \"[object String]\"\r\n        //     // Object.prototype.toString.call(123);// \"[object Number]\"\r\n        //     // Object.prototype.toString.call(true);// \"[object Boolean]\"\r\n        // //     Object.prototype.toString.call(fn); // \"[object Function]\"\r\n        // // **日期类型**\r\n        // //     var date = new Date();\r\n        // //     Object.prototype.toString.call(date); // \"[object Date]\"\r\n        // // **数组类型**\r\n        // //     var arr = [1,2,3];\r\n        // //     Object.prototype.toString.call(arr); // \"[object Array]\"\r\n        // // **正则表达式**\r\n        // //     var reg = /[hbc]at/gi;\r\n        // //     Object.prototype.toString.call(reg); // \"[object RegExp]\"\r\n        //\r\n    },\r\n    //创建一个日期对象;\r\n    date() {\r\n        return new Date()\r\n    },\r\n\r\n\r\n    //v-model.lazy.number watch验证数字和小数点位数n\r\n    checkNumber: function (val, n) {\r\n        val = String(val);\r\n        val = val.replace(/[^\\d.]/g, '');\r\n        val = Number(val).toFixed(n);\r\n        return val;\r\n    },\r\n    //调用数组原型链上方法 UpCase\r\n    switchArr: function (arr) {\r\n        if (this.judgeType(arr) === \"Array\") {\r\n            arr.UpCase();\r\n        }\r\n    },\r\n};\r\nexport default tools;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/tools.js"],"sourceRoot":""}